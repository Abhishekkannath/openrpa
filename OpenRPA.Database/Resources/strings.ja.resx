<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="activity_database_datatable" xml:space="preserve">
    <value>データテーブル</value>
  </data>
	<data name="activity_database_datatable_hint" xml:space="preserve">
    <value>結果を保存するデータテーブル</value>
  </data>
	<data name="activity_database_query" xml:space="preserve">
    <value>クエリ</value>
  </data>
	<data name="activity_database_query_hint" xml:space="preserve">
    <value>実行するクエリ</value>
  </data>
	<data name="activity_database_result" xml:space="preserve">
    <value>結果</value>
  </data>
	<data name="activity_database_result_hint" xml:space="preserve">
    <value>クエリーの結果</value>
  </data>
	<data name="activity_database_table" xml:space="preserve">
    <value>テーブル</value>
  </data>
	<data name="activity_database_table_hint" xml:space="preserve">
    <value>行を挿入するテーブル</value>
  </data>
	<data name="activity_databasescope" xml:space="preserve">
    <value>データベースへ接続</value>
  </data>
	<data name="activity_databasescope_select" xml:space="preserve">
    <value>データベースの選択</value>
  </data>
	<data name="activity_databasescope_tooltip" xml:space="preserve">
    <value>データベースへの接続を開き、終了時に接続を閉じるデータベーススコープ</value>
  </data>
	<data name="activity_displayname" xml:space="preserve">
    <value>表示名</value>
  </data>
	<data name="activity_displayname_help" xml:space="preserve">
    <value>ワークフローデザイナー内の表示名</value>
  </data>
	<data name="activity_executenonquery" xml:space="preserve">
    <value>非クエリーの実行</value>
  </data>
	<data name="activity_executenonquery_query" xml:space="preserve">
    <value>クエリ</value>
  </data>
	<data name="activity_executenonquery_query_help" xml:space="preserve">
    <value>実行するクエリ</value>
  </data>
	<data name="activity_executenonquery_tooltip" xml:space="preserve">
    <value>UPDATE、INSERT、DELETE文の場合、Resultの値はコマンドによって影響を受けた行の数で、それ以外の場合、Resultの値は-1になる</value>
  </data>
	<data name="activity_executequery" xml:space="preserve">
    <value>クエリーの実行</value>
  </data>
	<data name="activity_executequery_tooltip" xml:space="preserve">
    <value>クエリを実行し、その結果をデータテーブルとして返す </value>
  </data>
	<data name="activity_executescalar" xml:space="preserve">
    <value>スカラーを実行</value>
  </data>
	<data name="activity_executescalar_query" xml:space="preserve">
    <value>クエリ</value>
  </data>
	<data name="activity_executescalar_query_help" xml:space="preserve">
    <value>実行するクエリ</value>
  </data>
	<data name="activity_executescalar_tooltip" xml:space="preserve">
    <value>ちょうど1つの結果を返すクエリを実行します </value>
  </data>
	<data name="activity_getelement_drop_hint" xml:space="preserve">
    <value>ドロップ活動</value>
  </data>
	<data name="activity_updatefromtable" xml:space="preserve">
    <value>データテーブルからの更新</value>
  </data>
	<data name="activity_updatefromtable_datatable" xml:space="preserve">
    <value>更新したいデータがあるデータテーブルから</value>
  </data>
	<data name="activity_updatefromtable_datatable_help" xml:space="preserve">
    <value>データテーブル</value>
  </data>
	<data name="activity_updatefromtable_result" xml:space="preserve">
    <value>結果</value>
  </data>
	<data name="activity_updatefromtable_result_help" xml:space="preserve">
    <value>影響を受ける行数</value>
  </data>
	<data name="activity_updatefromtable_tablename" xml:space="preserve">
    <value>テーブル名</value>
  </data>
	<data name="activity_updatefromtable_tablename_help" xml:space="preserve">
    <value>行を挿入するテーブル</value>
  </data>
	<data name="activity_updatefromtable_tooltip" xml:space="preserve">
    <value>現在のデータベースに対してデータテーブルのデータを挿入、更新、削除し、影響を受けた行の数を返す</value>
  </data>
</root>